#summary We don't know where we're going, and we don't know where we've been
#labels Phase-Requirements

= Introduction =

There is no defined goal for `TextMunger`, beyond being useful.

For certain limited definitions of the word "useful."


= Details =


==RECENTLY COMPLETED TASKS==
  * `FreeVerse` transformation rule implementation 2012.04.16
   * which combines standalone `ShortLines` and `InitialSpace`s transformations
  * `HeijinianAidToMemory` transformation implementation 2012.04.17
   * indents lines according to alpha offset
  * save and reload text-sources (if in library or local files) 2012.03.28
  * basic editing control for SOURCE and OUTPUT 2012.03.27
    * This was pretty-much built-on, only now it's accessible via context-menu
  * added SNIPPETS window  2012.03.27
    * and copy-to-snippets from OUTPUT via context-menu
  * put density inside of XRML format 2012.03.18
  * load SOURCE from file 2012.03.19
  * save OUTPUT to file 2012.03.19


==TASKS (in no particular order)==
  * save and reload configured rule-sets
   * partially working as of 2012.04.12, but needs improvement, including
  * named rule-sets
  * auto-loading of saved-rulesets (in predefined location)
  * some sort of short-cut key to edit a given ruleset(s)
   * there's a lot of clicking in this interface.
  * build unit-tests
  * Markov updates
   * drop xray-references in Markov rules
   * add explanation of rules to rule-editor (and whatever background code)
   * change multiple-Markov rules to one rule, with options
   * make Markov-analysis case-insensitive for analysis
    * not for output (optional, I suppose)
    * optional
  * added percentage bias to text sources
   * although this can be crudely-done via adding the text more than once
  * swap OUTPUT to SOURCE, for re-processing
  * more clustering random-walk for Density transform
  * file-based generic replacement "translator" to read from directory
   * ie, multiple user-controlled translators are possible
   * that will be an issue for serialization....
   * wait, I think I did this....
  * improve display in selection editors
   * this is more of a update for [https://code.google.com/p/winforms-custom-select-control/ the winform custom select control project]
  * allow controls to resize when form is resized
  * separation of operation from GUI, so can be scripted
  * more Transformations
   * acrostic/mesostic generator
   *ee-cummings-ification
  * percentage-bias for word-level Transforms
  * granularity-handler for sentence-level
  * installation project, so installer can exist in project alongside source
  * better movement-controls inside of edit-areas
   * ie, word-jump, etc

==WAAAY Down the road, but a major goal:==
  * planar-output and processing, not just linear